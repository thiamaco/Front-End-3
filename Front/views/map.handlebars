<script>
  (g => { var h, a, k, p = "The Google Maps JavaScript API", c = "google", l = "importLibrary", q = "__ib__", m = document, b = window; b = b[c] || (b[c] = {}); var d = b.maps || (b.maps = {}), r = new Set, e = new URLSearchParams, u = () => h || (h = new Promise(async (f, n) => { await (a = m.createElement("script")); e.set("libraries", [...r] + ""); for (k in g) e.set(k.replace(/[A-Z]/g, t => "_" + t[0].toLowerCase()), g[k]); e.set("callback", c + ".maps." + q); a.src = `https://maps.${c}apis.com/maps/api/js?` + e; d[q] = f; a.onerror = () => h = n(Error(p + " could not load.")); a.nonce = m.querySelector("script[nonce]")?.nonce || ""; m.head.append(a) })); d[l] ? console.warn(p + " only loads once. Ignoring:", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n)) })({
    key: "suakey",
  });
</script>

<body>
  <div class="grid-container">
    <aside class="left"></aside>
    <main class="center">

      <div id="message-add">
        <span>Um novo Usuario foi adicionado!</span>
      </div>
      <div id="map">
      </div>
      <div id='procurar' style="">
        <label for="">Escolha a pessoa a ser pesquisada:</label>
        <select name="pontos" id="pontos">
          {{#each dados}}
           <option value="{{@index}}">
          {{#each results}}
         {{name.first}} {{name.last}}</option>
          {{/each}}
          {{/each}}
        </select>
      </div>
    </main>
    <aside class="right"></aside>
  </div>
  </div>
  <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
  <script src="script.js"></script>
  <script >
    // renderiza um mapa com foco incial em porto alegre
    let map;
    async function initMap() {
      const { Map } = await google.maps.importLibrary("maps");
      const myLatLng = { lat: -30.0277, lng: -51.2287 };
      map = new Map(document.getElementById("map"), {
        center: myLatLng,
        zoom: 8,
      });
    }
    initMap();
    //evento para abrir um mapa na tela, exibindo a localizaçao de todos do sistema
    $('.street').on('click', function () {
      ajustarcoord(dados)

    });

    $(document).ready(function() {
       ajustarcoord(dados) 
  if (window.location.href.indexOf("map") !== -1) {
    ajustarcoord(dados)    
  }
});

    //funcao para ajustar as coordenadas de acordo o nome da rua e a cidade da pessoa//
    function ajustarcoord(dados) {
      for (var i = 0; i < dados.length; i++) {
        var loc = dados[i].results[0].location.street.name + ', ' + dados[i].results[0].location.city
        var geocoder = new google.maps.Geocoder();
        geocoder.geocode({ 'address': loc }, function (results, status) {
          if (status === google.maps.GeocoderStatus.OK) {
            var locations = {}
            locations.lat = results[0].geometry.location.lat();
            locations.lng = results[0].geometry.location.lng();
            CoordAtualizados.push(locations);
          } else {
            console.log("erro pos:" + i);
            CoordAtualizados.push('erro');
          }
        });
      }
      setTimeout(() => {
        for (var i = 0; i < dados.length; i++) {
          if (CoordAtualizados[i] != 'erro')
            dados[i].results[0].location.coordinates = CoordAtualizados[i];
        }
        if (i == dados.length) {
          rendermarcadores(dados);
          //atualizar();
        }
      }, 2000)
    }
    //renderiza os marcadores no mapa
    function rendermarcadores(dados) {
      for (var i = 0; i < dados.length; i++) {
        new google.maps.Marker({
          position: dados[i].results[0].location.coordinates,
          map: map,
          title: dados[i].results[0].name.first + ' ' + dados[i].results[0].name.last,
        });
      }
    }
    //funcao para dar o foco da pessoa selecionado no select#pontos
    
    
    //evento quando há alguma alteraçao no select para alterar o foco no mapa
      
    $("#pontos").on("change", function () {
      var opcaoSelecionada = $(this).find("option:selected").val();
       const newLatLng = new google.maps.LatLng(dados[opcaoSelecionada].results[0].location.coordinates.lat, dados[opcaoSelecionada].results[0].location.coordinates.lng);
      map.panTo(newLatLng);
      map.setZoom(12);
    });
  </script>
  <script defer>
    setTimeout(() =>{
  ajustarcoord(dados);
    },3000)
   
  </script>
</body>